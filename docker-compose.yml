version: "3"
services:
  mysql:
    container_name: mysql
    image: mysql:latest
    volumes:
      - ./build/mysql/init/mysqld_charset.cnf:/etc/mysql/conf.d/my.cnf
      - ./build/mysql/data:/var/lib/mysql
    ports:
      - "3309:3309"
    expose:
      - 3309
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_TCP_PORT: 3309

  api:   # Service名
    image: node:21  # Dockerイメージを指定します。
    container_name: api   # Dockerコンテナ名 
    working_dir: /app  # 作業ディレクトリの指定
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
    - type: bind   # マウントタイプ
      source: ./omron-sensor-api   # マウント元
      target: /app   # マウントされるコンテナのパス
    - /app/node_modules # node_modulesをマウントしない
    tty: true   # コンテナを起動させ続ける。
    command: sh -c "yarn install && yarn run dev"   # コンテナ起動時に実行するコマンド

  jenkins:
    build:
      context: .  # Dockerfileのあるディレクトリ
      dockerfile: ./build/jenkins/Dockerfile  # Dockerfileの名前
    container_name: jenkins
    restart: on-failure
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./build/jenkins/jenkins-data:/var/jenkins_home
      - ./build/jenkins/jenkins-docker-certs:/certs/client:ro\
      - type: bind
        source: "/var/run/docker.sock"
        target: "/var/run/docker.sock"


